{
  "id" : "Sugarfunge",
  "realm" : "Sugarfunge",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "eb513bcf-9b6f-4759-a2fb-f0c25fcffa1f",
      "name" : "default-roles-sugarfunge",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ]
      },
      "clientRole" : false,
      "containerId" : "Sugarfunge",
      "attributes" : { }
    }, {
      "id" : "e5e96cc1-4846-4cda-99a8-c91c8088d44b",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "Sugarfunge",
      "attributes" : { }
    }, {
      "id" : "b8c054d9-89af-45b7-b1ab-6455193be4f7",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "Sugarfunge",
      "attributes" : { }
    }, {
      "id" : "802e340e-7c8f-463f-9015-3b9b6caddc00",
      "name" : "sugarfunge-api",
      "composite" : true,
      "composites" : {
        "client" : {
          "realm-management" : [ "manage-users" ]
        }
      },
      "clientRole" : false,
      "containerId" : "Sugarfunge",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "dc907c81-bf5c-4060-9562-d6377966ecc9",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "9f7dfa7c-fdd5-4256-b52d-3e8d4f867ed3",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-clients", "impersonation", "query-groups", "manage-events", "manage-realm", "view-users", "view-authorization", "view-events", "query-clients", "view-identity-providers", "query-users", "query-realms", "manage-identity-providers", "create-client", "manage-users", "manage-clients", "view-realm", "manage-authorization" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "6d45cf69-e53e-4ad0-97b9-595cd6f1491f",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "d65194b2-9054-45ea-a095-e88cf1224b15",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "095e083b-935a-4a85-954f-955d831ddaa5",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "2b47e476-bbfc-4657-a10b-f20916935d00",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "9e1a35d6-2160-421a-8a76-49bcf849d76a",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "d66bcccf-9c36-417b-8519-73931bee75ad",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "a5e7bebf-038c-4dd4-bb5c-91b244606de8",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "888e8467-0499-459c-91c2-dde7c7d01580",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "b8aad53a-6fb8-486f-a3ee-4f0dfc85d6d2",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "337108c7-57c4-417f-8ebd-26cf631afb72",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "f1906341-c673-4ba1-85e9-2246a9d40be4",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "0e31da53-fa55-4971-9c7c-6a6c62df9f6d",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "0d7539e1-2d64-48eb-b8bd-9392d4a2818b",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "ea3d35f9-f5ee-4a82-8ae6-a2652dc5c38c",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "28f9d26b-46c6-4c17-ac34-af4799174737",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "578cab18-87c5-479b-9dd6-fe1c125af062",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      }, {
        "id" : "6f851ab8-327a-4eec-b65a-f5c2d9154b81",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "sugarfunge-api" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "c43367bc-6baa-4dd9-b819-3370c7b94429",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "32b135f9-c380-4e72-8fcf-eea445fe1c00",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "f8fa2ae8-cf27-45aa-9997-a5c79ec9f666",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "65702ade-d500-4dea-9c0f-9f40f8bed3a3",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "bdf4fb02-426a-49dd-8839-fcb4825198df",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "a5069f0b-ea16-42fa-a91e-d6f033506bf0",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "16698368-29a1-48d9-b383-299143e4b57a",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "2832142b-3f61-4ccf-866d-5e3785ffa234",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      }, {
        "id" : "badceeeb-6634-42bb-884f-f58e353ce631",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "eb513bcf-9b6f-4759-a2fb-f0c25fcffa1f",
    "name" : "default-roles-sugarfunge",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "Sugarfunge"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "b5d19fcb-9e81-48df-b38d-743c8ce74701",
    "createdTimestamp" : 1655325758833,
    "username" : "sugarfunge",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Sugar",
    "lastName" : "Funge",
    "email" : "sugarfunge@sugarfunge.com",
    "credentials" : [ {
      "id" : "ce2a2b44-38b2-40a6-af48-e655228e5613",
      "type" : "password",
      "createdDate" : 1655325836427,
      "secretData" : "{\"value\":\"d5OQkJk32z+c5Brf1Czu7pYvPnnHML0quDMkFsHA8pP0O5Mjhxb+N4lEbaw0IUTc6YOpfKmFwj4qjuoF1AIufw==\",\"salt\":\"4TvXhyRML2d7k3obWLdk5Q==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-sugarfunge", "sugarfunge-api" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "2dd01fa7-58df-4c5a-9bcc-908a7a696f72",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/Sugarfunge/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/Sugarfunge/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b1d457b1-76bd-4000-8eaf-c32cd3267112",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/Sugarfunge/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/Sugarfunge/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "c6732064-2212-49ed-9bfc-7360c8fcc7c5",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1899d34d-09a0-4d7f-a07f-c3cd99a75f21",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "32b135f9-c380-4e72-8fcf-eea445fe1c00",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "8e8f08c7-1775-47c7-a180-5cf135c37b5b",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a7becf47-0986-4903-9577-31cf9d9dabae",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/Sugarfunge/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/Sugarfunge/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "85438959-05fc-4d31-ae3c-8dc8addd697f",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "cf9b69a1-c9c5-4b4d-b845-85778f8736e9",
    "clientId" : "sugarfunge-api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "d211e904-6584-4ed0-9849-62b75e01d600",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "aedd7d70-33ee-424b-b65c-35ecaaeda9dc",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "33aff9c2-72af-4178-a752-de55e816966d",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1361c7cd-265f-42c5-be20-e36760915bef",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "71d7f960-bee1-4d90-a01f-1d9ecfd354cd",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "5b20dd7a-29e9-49f6-880b-a31b1e0b7ab0",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "0300f8c9-9d30-4a31-a81e-99792885a83c",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "c51134af-fe20-408b-966a-aa1d9f813dde",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "86442094-4e9b-49ea-9935-acc69b6bd116",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "58b75e99-a6de-499c-a04d-1afd0ec7b10b",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "f6bdd5cc-d869-489e-a5c0-30c0a17c462a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "61401c86-5d42-4c14-9b53-27a0dee16d27",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "47707cc7-e833-4c41-b3b0-dd49d9bdd16d",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "c005de5c-3434-42ca-b3c6-41118598422b",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c82b8f32-8066-4776-a905-73767c1e832d",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "99147d54-f074-4865-82ee-6f9022e6c567",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b3510190-3392-43fb-9e46-590334d3631f",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "26e18d5f-fb30-4370-91d1-97d21c9ad63c",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "24c0f25a-8ff3-4ddb-942b-c6e82f2209f4",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "90ef100c-7326-4dcf-9c36-9901957ffe6d",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05cd907e-97ef-4391-82c5-dd1f5a3bc28c",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "95f31549-6a9a-4318-9ac5-3a623eac342c",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8546e6f5-3d38-40a4-9243-4f6c18d80dc2",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dbea6336-1950-45f2-a501-7dc7c4e8b4f0",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1a0694f2-889e-4415-9f65-942eacaf56c3",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "c67287e1-968d-4550-82ab-94999d1ad9e6",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a8330800-6443-41b7-8a45-55045b8aca0d",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b0a9044e-6806-4b16-a587-df61fc00e2b8",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6b3712fe-2eff-4697-a9b2-0fb98adb2343",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3a0b3436-5e43-411c-85f9-e288b48f03d4",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "00d1b7cd-43e1-4133-b866-c9974d29494e",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ad151af0-3362-4d27-bfe2-ae36426a81fc",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "cd509cd9-92fa-421c-ba3d-e0996912a598",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0fd63538-5447-4eb0-99e5-599b0b4564d9",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "c6d09172-78d3-4615-aa22-b55ab713b328",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "9fc1e89a-6050-4326-a128-7b1ce59adce8",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "412641a7-c0f1-463e-9b9d-46189fb286ee",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "48e5b8d6-f2db-4bcf-b1af-11dcc440edf4",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "b3cb462c-0f1b-47d6-96c6-e73a69c9d959",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "0e954a15-cccd-4d0c-9aa9-4d63834073ca",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "fdf0f565-8d0c-4c7a-b8c2-d13c116c054e",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f4edef28-a7fe-4af6-8153-8f4e24677467",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "042eb899-6429-4414-a6c5-6ea0567f4b9d",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "a7dec6c6-1013-4371-82c5-160c44bba11a",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "5d3ea372-f46b-49b5-85df-de5dd1c3ebd9",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "ad8a47a0-82eb-4e29-b90a-277e2667e44d",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f2ad1978-5663-404a-8dcf-e4c136103e0b" ],
        "secret" : [ "YpE26Mk1BRuAhN3O1YzWTQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "b92f1a96-c683-4694-b641-dd6c052f4e5e",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "74b0394c-7747-475f-818d-674ab2ff39c1" ],
        "secret" : [ "jnQewSMePRzPxCRlGYvlqdB-mwRdpAe-jbgXKpJePG93ubsGL2D1B9_swGkoD5nfNeZPS79l6trMtneXqo4jjw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "8c98214b-d742-480e-a100-70f1d4ae5887",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAx8QfHxcWNaSzn1sJOXaK1biLhwZgPaH9tLRvNxI/kvi5gdzyGRjCQWDKv+AdzFsBVpaT1sDvA4SITQsYRuY5ACf8+wpZ0nbnxB8Bb/LZvgaKWly3as/lkLMj7YkZKbXL3hg1wgAWlQUjepQEpH0BUFs4d0u6hDPCT0+7V6P3bESAkbPde/Ci4Ynp+8JoZwGV86Id/ubSpsep9myFxtlm7T0IZF60q06FRKh5mvNwv4PSub/4by++zREliGLmuxY7+hTZX6G0eroqP2Jpa3YlW8h8CCcg4wwCXYnkI5XxhlYlkJl45kKbG0i9tQEGGDcpL369nCRY9hCS5OmFjXU/mQIDAQABAoIBAQCBep7pWd9tWZmLGkh6VFlceUcGd519lTeKHsFPIqbOLiSfBYRtu9x8363KfAsUX5AYfXTJZzgEQazOsvhDTAl6DnEsjeL2RVeniKk31GJJhpe6RgokUyfqiBIrbgc/P7Qp+esuGTyJzlDWrIXtz5BAcz/AIvd7pMi2+2jkP0SpiP7eL9To+5lsN+a0lzyics5umQNKyfoxyaGgiiy0j9sMKPGWuarK5VSgyvCZIkR6ADY8JfsTCXUPdEltPYYFZs02EpUsobJlWUeCTA1Ny8XmNUfjHmgjhdj4ibMBEUM+ATOSlFlo1Faj1NMq1VFiVd8nqpkIzvqgHiPC9okKEtVZAoGBAPWROaoqpovljM+89ZKUpoTcJKGHGzb35pRjpajxMoAHiSjGoA/AdyjW+CHUsQk8X47nguhaL9RV7MQ1C9573X46h68Pl8Su6iAPdm3GPuVaN6n/tT7FZo9PFsnGS5Y9kgxO5r543rC26PNAz7CN+5D6yb5C+cJ+ot1AhUEEdl4XAoGBANBAw/KuztF5W+6rb9YvaRqCTDyx9PgY4IJdieCjlEUX/TH6dpGCFdYOvE2sYDC9j1Img44hGRUkAJzcER2QTJnx1sqXEEtuWnRnRfBstyxrbDbIura5b2xv1hNL64gK5M1DDHDlJC5Szb8/EiakhohxZZkgu5SONGWW7SUbyA3PAoGAX0sz7W0PpEo4EoVpZrB4ziX/sQ8U6Ifa2sqwhpbS2gwSldg+VN6DXz3MnJRE/yiGjJYansAgv214q8tKB9RZZ5qe/Lg4VQLrp/VYJ9E+pxITd8zbMLi5y/MNDM/+lRbfjhcwQ8nz4O+aBouoDQOME/6+Oy8SbP9nhCR9kXWB2ZECgYEAyZ1qFxFV+Ubc0fv3kgzkXF25ISnIWEj9Ujjsuyai7SGEZ1ZsZALk0RADDc/McGOU1Zuj0X4JooXwcew8Rbrl7kRMBmapx91WhUtWUqVt0PtPENrUqQJt9TVws83UgSjKyk4XRVUR6icQOg79q5utA3uFOPKPqArkf1XW0Q5MZ9ECgYEAqjdYYU1XlUIhtzAE8Jvakk+Zhrns2JkJzhkEyZ6XG8W7oRVdiWqGxA+jxwv6zlI8hFbttb2k+pfT8QrLd6RYPy28p11JtD8W85dBC9SlyjCfsFpBasTaEi+nLmcJN2Jr0BoXHK8+0plM0xkmCpS5VnpyGzCj71TM5TknqQmyx7o=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGBaRWljjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApTdWdhcmZ1bmdlMB4XDTIyMDYxNTIwMzUzNVoXDTMyMDYxNTIwMzcxNVowFTETMBEGA1UEAwwKU3VnYXJmdW5nZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMfEHx8XFjWks59bCTl2itW4i4cGYD2h/bS0bzcSP5L4uYHc8hkYwkFgyr/gHcxbAVaWk9bA7wOEiE0LGEbmOQAn/PsKWdJ258QfAW/y2b4Gilpct2rP5ZCzI+2JGSm1y94YNcIAFpUFI3qUBKR9AVBbOHdLuoQzwk9Pu1ej92xEgJGz3XvwouGJ6fvCaGcBlfOiHf7m0qbHqfZshcbZZu09CGRetKtOhUSoeZrzcL+D0rm/+G8vvs0RJYhi5rsWO/oU2V+htHq6Kj9iaWt2JVvIfAgnIOMMAl2J5COV8YZWJZCZeOZCmxtIvbUBBhg3KS9+vZwkWPYQkuTphY11P5kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAn6ZeqSi5P2gIdSS0b/8kgY5rQioQP3P7tAnt60zcCzZ2YsMZIplhk+U9L4AozS2j9kpZZXbHkoqdP44iooRnwHv0i7dGzHjJPbGV8uLPpuhsI3O1/0rwwtGbnu5uOGPwRCy9qYzyWyiWiDAd2Z6XokbkYI1FCKV2RoN2LLDoe5HOM39V8xj+6k9oi9m8NDDEBmllKSeXZpMRMgzv9bwL9+Ksd6Ovq4KmuGesnevAQDhERi0HZsM6RZr289ed1VuWTlP/Wk/mT9q+Idm65qGRjuCnqLRP0wDEuZrI2INbVr5vJxi2SY2w0KI+nzXSijtn6G0koINEu3/I1ty8qM+PkA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "c77d64e8-02b9-4aa0-af6b-2ce0c8b28f61",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAkrFAiEVDUBgiXrM5FDfo+IIXFYbHZY+3bHGJw/pQ2sqtwA0n8pdbJM5EXmlKTGiRjJr/NbTg0ETwHdxADeoXqsDmT80PAx937qSzlNPD7/0WXd5Bf9Q7kzKMGFoafbnwk0av02LRRT5onlI8MJJOK1TywCP1NSlUn6T3cDlzTyXYlGZ12GntgJMNY44uU7F9RJNaoBhXNVrFai8dRN1z8rDAU+qf1eCT0QYPtIpTSrIUMZ0MzPrtHJHD798gdDlKY+QWRb2BTtT0sQ5MU9BkZf0CvC91+uyuUMxZVyvWDT/ZsYSrEz7+MSTbDNjCWevxH1u9c+IiKBXnXgQGs2zUdQIDAQABAoIBAAmizRtmeVp8i11vJnO2jH4uhXerh9ObEjB0cNlHyyHkKG+yLYqY+Kq9Re5xuii0wcLbt6H+hLoJnUBI5IhFdVKJI1fgn3jUC1vIw+cl1fwgwuRdoi3UcilkK6G54X2axjvWa9xV5GtJAzRLMJr8MVhVVzDZ69SXJ3DpNDvR+kobl03E05d7ITjdiflDyID8GcFQR5ypWV9v1ySQ38gvrOKHXaDnD6SqIweeFgQWrQ+oazTDf1POL6Ft1sWBazqNf8yRpmMjhDaUdUM9hIjZaL3vrM6HkPCzKE1hiDclcopJkvJYGUK5WIx85NL15CH9tsMHfFMdJdpx5uIdRyc2TO0CgYEA7w2fcqIDz5+elgKPoiaAbgdjSIRITHwn26YGczpAUkgWYUoMkkUJ2Nr9E8ThQss8/Mp3fsqpB0smSd38wQ1vA23ePpdcoiVhw8f/AKqVGx/HnDWxigo3SWBlqfxq6Uys7/ciTcSBmyw6RvwfmjYyOLfqjerscL5fIR/BJEjGdjsCgYEAnRdzJPiC+aoVECh09SW49EbCetTQGWyYJhmM9lUY4B9/bIV0pbIIo+cpaizedK2DyZxi28WxnJRC2Y0lOlsmqoCrk3yNRY5iA8s4lAJQijC3d6Oq2Yyub8oOOVWKadMPmUaaDEQtpFKNYIRmrBnc/4pVdB9wfeFfozeINKDqRQ8CgYEA6KfCggeKW/yGlIrDjdWY8vz/tKkB0GaZSB2qc2TDCxGbrm4qFAVbExH2ctIPRjmVDpZifCTzIuURy5xgDOdtHtJEFXissCZfovK3jMd4PKDOXYqoUqekrSZDa4/94Tc9rIJCgZt5ZDNEOKfSffy3HhppDlwQZ53v6cYE7LJjbNcCgYAkR0kZLacZv1Sz8ZPpFXgcOccqFMGmTXTpv5bVQJvJDp0f08Y3ieEC8RyYX5pUOcoookwWUxaMgZTapwUE8A4C7Eozel0pxhMOqzz6uXoeH9gO8iY/rYSPXotgZEfd3pdIn4xt7sTXoRTzSEBp2GM4RJstgSE6gPTUPbvf45WWswKBgG8Q3wAvJimaVC1mbwsip7Y9mVeLMI+6aJ1XVMKK0FHP6dp8Y2gQGlNam2bHsV7JGraMSx4LlMxpNKzn65uO2HSUwZ8Jr7eJVnEkiScUaLBL8KYe6CDVLS/x1/PMnRdbob6Wpth6oyJEY94I/xIZpsJUbkJy33d8t5UL0GSP7dCC" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGBaRWlHjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApTdWdhcmZ1bmdlMB4XDTIyMDYxNTIwMzUzNVoXDTMyMDYxNTIwMzcxNVowFTETMBEGA1UEAwwKU3VnYXJmdW5nZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJKxQIhFQ1AYIl6zORQ36PiCFxWGx2WPt2xxicP6UNrKrcANJ/KXWyTORF5pSkxokYya/zW04NBE8B3cQA3qF6rA5k/NDwMfd+6ks5TTw+/9Fl3eQX/UO5MyjBhaGn258JNGr9Ni0UU+aJ5SPDCSTitU8sAj9TUpVJ+k93A5c08l2JRmddhp7YCTDWOOLlOxfUSTWqAYVzVaxWovHUTdc/KwwFPqn9Xgk9EGD7SKU0qyFDGdDMz67RyRw+/fIHQ5SmPkFkW9gU7U9LEOTFPQZGX9ArwvdfrsrlDMWVcr1g0/2bGEqxM+/jEk2wzYwlnr8R9bvXPiIigV514EBrNs1HUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAdlxbedEhyl3HZXQDfAdZxpTIY3NRNRmoX6AXPYxkvJyDNC+uwZGkVSFawvA6EjXdZ48Tvpn/dP59FHLMmW0NnmK2AUTIgltgjhDIyJu6CpjyqhcWT79TEXeq+JL0KV0vT1e3Sumg/isezVeaGfUfRRu58NZrLYO5GdTarVWq3U3d461xnDA7v8LVEz9uMdTAVAiKf4ajf1wnwyKl5jkZ4BtKCoxBlIJ2E3rHRWNXM9dNAksBU44HHmlNaUivsLwWmGDYDSCcykNThvwJkZXrEUnqt53NKGDQAL02G5gU8n3Gi5qZUkkK4kHEUgSf06BbrRJfv9p1k+yk/Y/4Jv5SSw==" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "c4599e86-3d3b-4780-83f9-77f78a756313",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36e20f57-f903-432d-8ae3-5d57392de435",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c68596c6-b6db-4f88-9d50-ac1fc762676e",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6bda202e-35bd-4fe5-bcd6-4a67a9d03739",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "53315fea-e82d-4bc5-b802-b1200ed6fc7f",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7cea2387-8cf6-4080-8633-ec126d9a4684",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ce9a6297-8f26-45f8-a5e9-3b72d9f669ba",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d5132781-6f6e-43a6-8573-80fea89c0615",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e09de3eb-6198-46a8-8be8-d4bcfb91e802",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "077e1b50-b2b3-4570-a723-51655ffd6914",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0eacc25d-6b9f-4e89-8279-a99bdf5da4f6",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b4a1f30-b7a6-41a5-97f6-b6e47a77cc4c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "aaaf55c0-3399-4e9d-9789-03083f0cbee6",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "92f5d73e-4d7a-4cb9-9563-6df3b256cb8d",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cfa9951f-7675-4cd7-ac56-6b53b02d8ff1",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "99510b49-a8b0-43c9-9dd0-eabfd4aa47d8",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d953f6fd-73fe-4010-8308-dcbcf7053082",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "09af5e09-fb1c-4530-bb1b-c27050849e11",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2e11e3ee-3350-456e-a6cc-dd2c9db92fb6",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "95a010ac-5cf7-4caf-9278-49e7c05ebdb6",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "4e95fb43-8fbc-42a8-9143-76feabb069c1",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "afc1e25e-eac9-475b-b383-869d6840a751",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
